appId: com.electron.app
productName: Openfy Music
directories:
  buildResources: build
  output: dist
files:
  - '!**/.vscode/*'
  - '!src/*'
  - '!electron.vite.config.{js,ts,mjs,cjs}'
  - '!{.eslintcache,eslint.config.mjs,.prettierignore,.prettierrc.yaml,dev-app-update.yml,CHANGELOG.md,README.md}'
  - '!{.env,.env.*,.npmrc,pnpm-lock.yaml}'
  - '!{tsconfig.json,tsconfig.node.json,tsconfig.web.json}'
asarUnpack:
  - resources/**
win:
  executableName: Openfy Music
  target: nsis
  icon: build/icon.png
  signingHashAlgorithms:
    - sha256
nsis:
  artifactName: ${name}-${version}-setup.${ext}
  shortcutName: ${productName}
  uninstallDisplayName: ${productName}
  createDesktopShortcut: always
  oneClick: false # Permite al usuario personalizar la instalación
  allowToChangeInstallationDirectory: true # Permite elegir el directorio de instalación
  installerIcon: build/icon.png # Asegúrate de tener un ícono en esta ruta
  uninstallerIcon: build/icon.png # Asegúrate de tener un ícono en esta ruta
mac:
  entitlementsInherit: build/entitlements.mac.plist
  extendInfo:
    - NSMusicUsageDescription: Application requests access to the user's Music folder.
  notarize: false
dmg:
  artifactName: ${name}-${version}.${ext}
linux:
  target:
    - AppImage
    - snap
    - deb
  maintainer: electronjs.org
  category: Utility
appImage:
  artifactName: ${name}-${version}.${ext}
npmRebuild: false
publish:
  provider: generic
  url: https://example.com/auto-updates
electronDownload:
  mirror: https://npmmirror.com/mirrors/electron/
extraMetadata:
  contentSecurityPolicy: "script-src 'self'" # Mejora la seguridad limitando la ejecución de scripts